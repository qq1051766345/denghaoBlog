(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{428:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react学习"}},[t._v("#")]),t._v(" react学习")]),t._v(" "),a("h2",{attrs:{id:"目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E8%99%9A%E6%8B%9Fdom%E7%9A%84%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F"}},[t._v("虚拟dom的的两种创建方式")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1jsx%E5%BD%A2%E5%BC%8F%E5%88%9B%E5%BB%BA"}},[t._v("1.jsx形式创建")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#2%E4%BD%BF%E7%94%A8js%E5%88%9B%E5%BB%BA"}},[t._v("2.使用js创建")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#jsx%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99"}},[t._v("jsx语法规则")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#react%E4%B8%AD%E7%BB%84%E4%BB%B6%E7%9A%84%E5%AE%9A%E4%B9%89%E6%96%B9%E5%BC%8F"}},[t._v("react中组件的定义方式")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6"}},[t._v("函数式组件")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E7%B1%BB%E5%BC%8F%E7%BB%84%E4%BB%B6"}},[t._v("类式组件")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E7%BB%84%E4%BB%B6%E5%AE%9E%E4%BE%8B%E7%9A%84%E4%B8%89%E5%A4%A7%E5%B1%9E%E6%80%A7"}},[t._v("组件实例的三大属性")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1state"}},[t._v("1.state")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#2props"}},[t._v("2.props")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#3ref"}},[t._v("3.ref")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E5%BC%8F%E4%B8%8D%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8"}},[t._v("字符串方式（不推荐使用）")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%9B%9E%E8%B0%83%E5%BD%A2%E5%BC%8Fref"}},[t._v("回调形式ref")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#createRef"}},[t._v("createRef")])])])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#react%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86"}},[t._v("react中的事件处理")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#React%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F"}},[t._v("React生命周期")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%97%A7"}},[t._v("1.生命周期（旧）")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#2%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%96%B0"}},[t._v("2.生命周期（新）")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6%E7%9A%84%E4%B8%89%E5%A4%A7%E5%B1%9E%E6%80%A7"}},[t._v("函数组件的三大属性")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1props"}},[t._v("1.props")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#2state%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0useState"}},[t._v("2.state（钩子函数useState）")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#3refuseRef"}},[t._v("3.ref（useRef）")])])])])]),t._v(" "),a("h2",{attrs:{id:"虚拟dom的的两种创建方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom的的两种创建方式"}},[t._v("#")]),t._v(" 虚拟dom的的两种创建方式")]),t._v(" "),a("h3",{attrs:{id:"_1-jsx形式创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-jsx形式创建"}},[t._v("#")]),t._v(" 1.jsx形式创建")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/babel"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.创建虚拟dom")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VDOM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1 id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("hello react"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.渲染虚拟dom到页面")]),t._v("\n    ReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VDOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-使用js创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用js创建"}},[t._v("#")]),t._v(" 2.使用js创建")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javascript"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.创建虚拟dom")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VDOM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.渲染虚拟dom到页面")]),t._v("\n    ReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VDOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"jsx语法规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx语法规则"}},[t._v("#")]),t._v(" jsx语法规则")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),a("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("en"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("UTF-8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("X-UA-Compatible"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("IE=edge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=device-width, initial-scale=1.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("01_hello_react"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 准备好一个容器 --\x3e")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/babel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'denghAo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello React'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VDOM")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h2 id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("myId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'white'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fontSize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("myData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h2 id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("myId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'white'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fontSize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("myData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渲染虚拟dom到页面")]),t._v("\n    ReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VDOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n      jsx语法规则：\n        1.定义虚拟dom时，不要写引号\n        2.标签中混入js表达式时要用{}\n        3.样式类名指定不要用class，要用className\n        4.内联样式要用style={{key:value}}的形式来写\n        5.只有一个根标签\n        6.标签必须闭合\n        7.标签首字母\n          （1）若小写字母开头，则将标签转化为同名元素，若html重无该标签的同名元素，则报错\n          （2）若大写字母开头，react就去渲染对应的组件，若组件没有定义，则报错。\n    */")]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"react中组件的定义方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react中组件的定义方式"}},[t._v("#")]),t._v(" react中组件的定义方式")]),t._v(" "),a("h3",{attrs:{id:"函数式组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数式组件"}},[t._v("#")]),t._v(" 函数式组件")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  //1.创建组件\n    function MyComponent(){\n      console.log(this);\n      return (\n        <h2>我是函数定义的组件，适用于简单组件的定义</h2>\n      )\n    }\n    //2.挂载组件到容器上\n    ReactDOM.render(<MyComponent/>,document.getElementById('app'));\n\n    /* \n      执行了 ReactDOM.render(<MyComponent/>,document.getElementById('app'));之后，发生了什么\n      1.React解析组件标签，找到MyComponent组件\n      2.发现组件是函数定义的，随后调用函数，将返回的虚拟dom转化为真实dom\n    */\n\n")])])]),a("h3",{attrs:{id:"类式组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类式组件"}},[t._v("#")]),t._v(" 类式组件")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" //1.创建类式组件\n    class MyComponent extends React.Component{\n      render(){\n        //render放在那里？ -类的原型上，供实例使用\n        //render中的this是谁，MyComponent的实例对象 == MyComponent组件实例对象\n        console.log(this)\n        return (\n          <h2>我是用类定义的组件（适用于复杂组件）</h2>\n        )\n      }\n    }\n\n    //2.挂载组件到容器上\n    ReactDOM.render(<MyComponent/>,document.getElementById('app'));\n    /* \n      执行了 ReactDOM.render(<MyComponent/>,document.getElementById('app'));之后，发生了什么\n      1.React解析组件标签，找到MyComponent组件\n      2.发现组件是类定义的，随后new出该类的实例，并通过该实例调用到原型上的render方法\n      3.将render返回的虚拟dom转化为真实dom，随后呈现在页面上\n    */\n")])])]),a("h2",{attrs:{id:"组件实例的三大属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件实例的三大属性"}},[t._v("#")]),t._v(" 组件实例的三大属性")]),t._v(" "),a("h3",{attrs:{id:"_1-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-state"}},[t._v("#")]),t._v(" 1.state")]),t._v(" "),a("p",[t._v("这是完整写出来的方式：")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<body>\n  \x3c!-- 准备好一个容器 --\x3e\n  <div id=\"app\"></div>\n  \n  <script type=\"text/babel\">\n    //1.创建虚拟dom\n    class Weather extends React.Component{\n      // 构造器调用几次 -----  一次\n      constructor(props){\n        super(props);\n        this.state = {\n          isHot:true,\n          wind:'微风',\n        };\n        // 需要给类中的方法指定this\n        //bind方法做了两件事，一件创建了changeWeather这个方法，二是改变了this指向\n        this.changeWeather = this.changeWeather.bind(this);//这个方法挂在实例上\n      }\n      //这个方法挂在原型上\n      changeWeather(){\n        //changeWeather放在哪儿 --weather的原型对象上，供实例使用\n        // 由于changeWeather式作为onclick的回调，所以不是通过实例调用的，而是直接调用\n        //类中的方法默认开启了严格模式，所以changeWeather中的this有问题\n        console.log(this.state.isHot);\n        // ！！！！状态不可直接更改\n        //this.state.isHot = !this.state.isHot;\n\n        //  ！正确写法,状态必须通过setState进行更新，且是合并不是替换\n        const {isHot} = this.state;\n        this.setState({\n          isHot:!isHot,\n        });\n      }\n      // render调用几次 1+n 次 1是初始化的那一次，n是状态更新的次数\n      render(){\n        const {isHot,wind} = this.state;\n        return <h1 onClick={this.changeWeather}>今天天气很{isHot ? '炎热' : '凉爽'},{wind}</h1>\n      }\n      \n    }\n\n  \n    // 2.渲染虚拟dom到页面\n    ReactDOM.render(<Weather/>, document.getElementById('app'));\n  <\/script>\n")])])]),a("p",[t._v("state的简写方式:")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<body>\n  \x3c!-- 准备好一个容器 --\x3e\n  <div id="app"></div>\n\n  \x3c!-- 引入核心库 --\x3e\n  <script src="../js/react.development.js"><\/script>\n  \x3c!-- 引入react操纵dom库 --\x3e\n  <script src="../js/react-dom.development.js"><\/script>\n  \x3c!-- 引入babel 将jsx转化为js--\x3e\n  <script src="../js/babel.min.js"><\/script>\n\n  <script type="text/babel">\n    class Weather extends React.Component{\n      //初始化状态\n      state = {\n        isHot:true,\n        wind:\'微风\',\n      }\n\n      //自定义方法\n      //这样写就放在实例上而不是对象原型上\n      changeWeather = ()=> {\n        const {isHot} = this.state;\n        this.setState({\n          isHot:!isHot,\n        });\n      }\n      render(){\n        const {isHot,wind} = this.state;\n        return <h1 onClick={this.changeWeather}>今天天气很{isHot ? \'炎热\' : \'凉爽\'},{wind}</h1>\n      }\n    }\n\n  \n    // 2.渲染虚拟dom到页面\n    ReactDOM.render(<Weather/>, document.getElementById(\'app\'));\n  <\/script>\n </body>\n')])])]),a("h3",{attrs:{id:"_2-props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-props"}},[t._v("#")]),t._v(" 2.props")]),t._v(" "),a("p",[t._v("props属性主要用于组件之间传值")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' <script type="text/babel">\n    //1.创建组件\n    class Person extends React.Component{\n      render() {\n        console.log(this)\n        const {name,gender,age} = this.props;\n        return (\n          <ul>\n            <li>姓名：{name}</li>\n            <li>性别:{gender}</li>\n            <li>年龄：{age}</li>\n          </ul>\n        )\n      }\n    }\n    \n    // 2.渲染虚拟dom到页面\n    ReactDOM.render(<Person name="tom" gender="男" age={18}/>, document.getElementById(\'app1\'));\n    ReactDOM.render(<Person name="mike" gender="女" age={20}/>, document.getElementById(\'app2\'));\n    // ReactDOM.render(<Person name="denghao" gender="男" age="18"/>, document.getElementById(\'app3\'));\n    const p  = {name:\'denghao\',gender:\'男\',age:18};\n    // 批量传递属性\n    ReactDOM.render(<Person {...p}/>, document.getElementById(\'app3\'));\n  <\/script>\n')])])]),a("p",[t._v("可以对传递的属性进行限制")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  // 限制传递的属性（函数式组件和类式组件均可）\n    Person.propTypes = {\n      name:PropTypes.string.isRequired,  //限制name必须传递，且为字符串类型\n      age:PropTypes.number,       //限制age为数字类型\n      gender:PropTypes.string      //限制gender为字符串类型\n    }\n    // 设置默认值\n    Person.defaultProps = {\n      gender:'不男不女',\n      age:18\n    }\n    \n    \n    \n    //简写方式 写在类里面 通过静态属性的方式获得来设置\n     // 限制传递的属性\n      static propTypes = {\n        name: PropTypes.string.isRequired,  //限制name必须传递，且为字符串类型\n        age: PropTypes.number,       //限制age为数字类型\n        gender: PropTypes.string      //限制gender为字符串类型\n      }\n\n      // 设置默认值\n      static defaultProps = {\n        gender: '不男不女',\n        age: 18\n      }\n    }\n\n    \n")])])]),a("h3",{attrs:{id:"_3-ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-ref"}},[t._v("#")]),t._v(" 3.ref")]),t._v(" "),a("p",[t._v("帮助获得react中的dom对象的属性")]),t._v(" "),a("h4",{attrs:{id:"字符串方式-不推荐使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串方式-不推荐使用"}},[t._v("#")]),t._v(" 字符串方式（不推荐使用）")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' //1.创建组件\n    class Demo extends React.Component {\n      //展示左侧输入框的数据\n      showData1 = () => {\n        //获取左侧输入框的数据\n        const data = this.refs.input1.value;\n        //提示数据\n        alert(data);\n      }\n\n\n      //展示右侧输入框的数据\n      showData2 = () => {\n        const {input2} = this.refs;\n        alert(input2.value);\n      }\n\n      render() {\n        return (\n          <div>\n            <input ref="input1" type="text" placeholder="点击按钮提示数据" />\n            <button onClick={this.showData1}>点我提示左侧数据</button>\n            <input ref="input2" onBlur={this.showData2} type="text" placeholder="失去焦点提示数据" />\n          </div>\n        )\n      }\n    }\n\n    // 2.渲染虚拟dom到页面\n    ReactDOM.render(<Demo />, document.getElementById(\'app\'));\n')])])]),a("h4",{attrs:{id:"回调形式ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回调形式ref"}},[t._v("#")]),t._v(" 回调形式ref")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//1.创建组件\n    class Demo extends React.Component {\n      //展示左侧输入框的数据\n      showData1 = () => {\n        //获取左侧输入框的数据\n        const input1 = this.input1;\n        //提示数据\n        alert(input1.value);\n      }\n\n\n      //展示右侧输入框的数据\n      showData2 = () => {\n        const {input2} = this;\n        alert(input2.value);\n      }\n\n      render() {\n        return (\n          <div>\n            <input ref={currentNode => this.input1 = currentNode} type="text" placeholder="点击按钮提示数据" />\n            <button onClick={this.showData1}>点我提示左侧数据</button>\n            <input ref={currentNode => this.input2 = currentNode}  onBlur={this.showData2} type="text" placeholder="失去焦点提示数据" />\n          </div>\n        )\n      }\n\n    }\n')])])]),a("h4",{attrs:{id:"createref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#createref"}},[t._v("#")]),t._v(" createRef")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//1.创建组件\n    class Demo extends React.Component {\n      /* \n        React.createRef()调用后返回一个容器，该容器可以被ref所表示的节点\n        这容器是专人专用的 只能存一个\n       */\n      myRef1 = React.createRef();\n      myRef2 = React.createRef();\n      //展示左侧输入框的数据\n      showData1 = () => {\n        console.log(this.myRef);\n        //获取左侧输入框的数据\n        const input1 = this.myRef1.current;\n        //提示数据\n        alert(input1.value);\n      }\n\n      showData2 = () =>{\n        alert(this.myRef2.current.value);\n      }\n\n      render() {\n        return (\n          <div>\n            <input ref={this.myRef1} type="text" placeholder="点击按钮提示数据" />\n            <button onClick={this.showData1}>点我提示左侧数据</button>\n            <input onBlur = {this.showData2} ref={this.myRef2} type="text" placeholder="点击按钮提示数据" />\n          </div>\n        )\n      }\n\n    }\n')])])]),a("h2",{attrs:{id:"react中的事件处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react中的事件处理"}},[t._v("#")]),t._v(" react中的事件处理")]),t._v(" "),a("p",[t._v("可以通过事件的回调函数传的参数event得到发生事件的dom元素")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' showData2 = (e) =>{\n        //可以通过e.target得到发生事件的DOM元素对象\n        console.log(e.target.value);\n        alert(e.target.value);\n      }\n\n      render() {\n        return (\n          <div>\n            <input ref={this.myRef1} type="text" placeholder="点击按钮提示数据" />\n            <button onClick={this.showData1}>点我提示左侧数据</button>\n            <input onBlur = {this.showData2}  type="text" placeholder="点击按钮提示数据" />\n          </div>\n        )\n      }\n')])])]),a("h2",{attrs:{id:"react生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期"}},[t._v("#")]),t._v(" React生命周期")]),t._v(" "),a("h3",{attrs:{id:"_1-生命周期-旧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-生命周期-旧"}},[t._v("#")]),t._v(" 1.生命周期（旧）")]),t._v(" "),a("p",[t._v("生命周期图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210403091046465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODA2NTI2Mg==,size_16,color_FFFFFF,t_70#pic_center",alt:""}})]),t._v(" "),a("ol",[a("li",[t._v("加载阶段")]),t._v(" "),a("li",[t._v("取得默认属性，初始状态在constructor中完成（运行一次，可读数据，可同步修改state，异步修改state需要setState,setState在实例产生后才可以使用，可以访问到props）")]),t._v(" "),a("li",[t._v("即将挂载 componentWillMount")]),t._v(" "),a("li",[t._v("描画VDOM render (创建虚拟dom，进行diff算法，更新dom树)")]),t._v(" "),a("li",[t._v("组件渲染之后调用 componentDidMount (一般在这个钩子中做一些初始化的事，例如：开启定时器、发送网络请求、订阅消息) 常用\n更新阶段")]),t._v(" "),a("li",[t._v("props改变 componentWillReceiveProps (组件加载时候不调用，组件接受新的props时调用)")]),t._v(" "),a("li",[t._v("shouldComponentUpdate 是否需要更新（return true就会更新dom，false阻止更新）")]),t._v(" "),a("li",[t._v("描画VDOM render (创建虚拟dom，进行diff算法，更新dom树)")]),t._v(" "),a("li",[t._v("componentDidUpdate 组件数据更新完成后调用")]),t._v(" "),a("li",[t._v("卸载阶段\ncompoenentWillUnmount (即将卸载，可以做一些组件相关的清理工作，如青春计时器、网络请求等 )常用")]),t._v(" "),a("li",[t._v("组件卸载： unmountComponentAtNode(document.getElementById('root'))")]),t._v(" "),a("li",[t._v("所有子组件挂载完成，才标记着父组件挂载完成，父组件更新，子组件更新，子组件更新，子组件不更新")])]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<script type=\"text/babel\">\n    //1.创建组件\n    class Count extends React.Component{\n      //构造器\n      constructor(props){\n        super(props);\n        console.log('constructor');\n      }\n\n      //组件将要挂载\n      componentWillMount(){\n        console.log('componentWillMount');\n      }\n\n      //组件挂载完成的钩子\n      componentDidMount(){\n        console.log('componentDidMount');\n      } \n\n      //组件即将被销毁的时候出发\n      componentWillUnmount(){\n        console.log('componentWillUnmount');\n      }\n\n      // 控制组件更新的阀门\n      shouldComponentUpdate(){\n        console.log('shouldComponentUpdata');\n        return true;\n      }\n\n      // 组件将要更新\n      componentWillUpdate(){\n        console.log('componentWillUpdate');\n      }\n\n      // 组件更新完成\n      componentDidUpdate(){\n        console.log('componentDidUpdate');\n      }\n\n      // 父组件即将更新的时候触发\n      componentWillReceiveProps(){\n        console.log('count组件将要接收到新的props');\n      }\n\n      //初始化状态\n      state= {\n        count: 0\n      }\n      // 加一方法\n      add = () => {\n        //获取原来状态\n        let {count} = this.state;\n        //更新状态\n        this.setState({count: count + 1});\n      }\n\n      // 卸载组件\n      delete = () => {\n        //卸载组件\n        ReactDOM.unmountComponentAtNode(document.getElementById('app'));\n      }\n\n      // 强制更新组件\n      force = () => {\n        // 强制更新\n        this.forceUpdate();\n      }\n\n      //创建组件\n      render(){\n        console.log('render');\n        return (\n          <div>\n            <h2>当前A组件的车位{this.props.carName}</h2>\n            <h2>当前求和为{this.state.count}</h2>\n            <button onClick = {this.add}>点我加一</button>\n            <button onClick={this.delete}>卸载组件</button>\n            <button onClick={this.force}>不更改任何状态里的数据，强制更新一下</button>\n          </div>\n        )\n      }\n    }\n\n    class A extends React.Component{\n      // 初始化状态\n      state = {\n        carName:'奔驰c63'\n      }\n      //换车\n      changeCar = () => {\n        this.setState({carName:'劳斯莱斯'})\n      }\n      render(){\n        return (\n          <div>\n            <h2>我是A组件</h2>\n            <button onClick={this.changeCar}>换车</button>\n            <Count carName={this.state.carName}/>\n          </div>\n        )\n      }\n    }\n    \n    //渲染组件到页面\n    ReactDOM.render(<A/>, document.getElementById('app'));\n  <\/script>\n")])])]),a("h3",{attrs:{id:"_2-生命周期-新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-生命周期-新"}},[t._v("#")]),t._v(" 2.生命周期（新）")]),t._v(" "),a("ol",[a("li",[t._v("在React16新的生命周期弃用了compostWillMount、componentWillReceiveProps、componentWillUpdate")]),t._v(" "),a("li",[t._v("新增了getDerivedStateFromProps、getSonapshotBeforeUpdate来替代弃用的三个钩子函数(compostWillMount、componentWillReceiveProps、componentWillUpdate)")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210403095846563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODA2NTI2Mg==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("ol",[a("li",[t._v("渲染前 static getDerivedStateFromProps(props,state)\n无法访问this\nprops,state是更新后的\n必须返回一个对象，用来更新state或者null 不更新\n必须要初始化state\n场景：state的值在任何时候都取决于props时")]),t._v(" "),a("li",[t._v("render\n必须return jsx|string|number|null\n不会直接于浏览器交互：不要操作DOM｜和数据")]),t._v(" "),a("li",[t._v("componentDidMount 挂载完成后执行\n更新阶段")]),t._v(" "),a("li",[t._v("渲染前 static getDerivedStateFromProps(props,state)\n无法访问this\nprops,state是更新后的\n必须返回一个对象，用来更新state或者null 不更新\n必须要初始化state\n场景：state的值在任何时候都取决于props时")]),t._v(" "),a("li",[t._v("render\n必须return jsx|string|number|null\n不会直接于浏览器交互：不要操作DOM｜和数据")]),t._v(" "),a("li",[t._v("getSnapshortBeforeUpdate(prevProps,prevState)\n组件能在发生更改之前从DOM中捕获一些信息(dom渲染前的状态)\n返回 值｜null 会给componentDidUpdate\nprevProps、prevState 更新前this.props、this.state更新后")])]),t._v(" "),a("p",[t._v("下列表是getSnapshotBeforeUpdate运用实例")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<script type="text/babel">\n    class NewsList extends React.Component{\n      //初始化状态\n      state = {\n        newsArr:[]\n      }\n\n      //更新前获取快照\n      getSnapshotBeforeUpdate(){\n        console.log(this.List.scrollHeight);\n        //传给componentDidUpdate更新前盒子的高度\n        return this.List.scrollHeight;\n      }\n\n      componentDidUpdate(preProps,preState,snapshot){\n        //更新完成后，将滚动条的位置改变\n        this.List.scrollTop += this.List.scrollHeight - snapshot;\n        console.log(12313,this.List.scrollHeight - snapshot);\n      }\n\n      componentDidMount(){\n        //挂载完成就开始一个循环定时器\n        this.timer = setInterval(() => {\n          //获取原状态\n          let {newsArr} = this.state;\n          //模拟一条新闻\n          const news = \'新闻\' + (newsArr.length + 1);\n          //将新闻添加到原状态中\n          this.setState({\n            // 合并数组\n            newsArr:[news,...newsArr],\n          })\n        },1000)\n      }\n      render(){\n        return (\n          <div className="list" ref={k => this.List = k}>\n            {\n              this.state.newsArr.map(n => {\n                return <div className="news" key={n}>{n}</div>\n              })\n            }\n          </div>\n        )\n      }\n    }\n\n    //渲染组件\n    ReactDOM.render(<NewsList/>,document.getElementById(\'app\'));\n  <\/script>\n')])])]),a("h2",{attrs:{id:"函数组件的三大属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数组件的三大属性"}},[t._v("#")]),t._v(" 函数组件的三大属性")]),t._v(" "),a("h3",{attrs:{id:"_1-props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-props"}},[t._v("#")]),t._v(" 1.props")]),t._v(" "),a("p",[t._v("和类组件类似，通过属性的方式传值:")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  // 属性一个一个传值\n  <Button bgColor='red' color='white'>我是一个按钮</Button>\n \n // 多属性传值\n <div className='logs'>\n      {\n        data.map(item => <LogItem key={item.id} {...item}/>)\n      }\n  </div>\n\n")])])]),a("p",[t._v("这些传进来的值会被封装成一个对象作为函数组件的参数被接收到")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const Button = (props) => {\n    return <button style={{backgroundColor:props.bgColor, color:props.color}}>{props.children}</button>;\n};\n​\nexport default Button;\n")])])]),a("p",[t._v("props补充：")]),t._v(" "),a("p",[t._v("props对象不仅可以通过属性传值收到，而且可以是标签体内的内容以及className里的内容")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export default function Card(props) {\n  /* \n      props.children: 表示组件的标签体内容\n      props.className:表示组件的claaName内容\n  */\n  return (\n    <div className={`card ${props.className}`}>{props.children}</div>\n  )\n}\n\n\n")])])]),a("p",[t._v("往组件内传内容时：")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" <Card className='logs'>\n      {\n        data.map(item => <LogItem key={item.id} {...item}/>)\n      }\n </Card>\n")])])]),a("h3",{attrs:{id:"_2-state-钩子函数usestate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-state-钩子函数usestate"}},[t._v("#")]),t._v(" 2.state（钩子函数useState）")]),t._v(" "),a("p",[t._v("state和props类似，都是一种存储属性的方式，但是不同点在于state只属于当前组件，其他组件无法访问。并且state是可变的，当其发生变化后组件会自动重新渲染，以使变化在页面中呈现。(类似于vue的data数据项但是需要自己手动设置)")]),t._v(" "),a("p",[t._v("在函数中使用state我们需要使用一种钩子（hook）函数。钩子函数可以在函数组件中“勾出”React的特性，换句话说我们要用一个函数“勾出”state。")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const [state, setState] = useState(initialState);\n")])])]),a("p",[t._v("useState方法只有一个参数，就是当前state的默认值，方法会以数组的形式返回两个值：")]),t._v(" "),a("p",[t._v("第一个值：是存储在state的变量")]),t._v(" "),a("p",[t._v("第二个值：是操作此变量的函数")]),t._v(" "),a("p",[t._v("React还允许我们通过一个回调函数来修改state，回调函数的返回值就是新的state的值，使用回调函数的好处是，这个回调函数会确保上一次的"),a("code",[t._v("setState()")]),t._v("调用完成后才被调用，同时会使用最新的state值作为回调函数的第一个参数；")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const addHandler = () => {\n    //点击以后数字加1\n    console.log('add');\n    setCounter(preState => preState + 1);\n  }\n  \n  \n  return (\n    <div className='App'>\n      <h1>{counter}</h1>\n      <button onClick={addHandler}>+</button>\n      <button onClick={reduceHandler}>-</button>\n    </div>\n  );\n")])])]),a("h3",{attrs:{id:"_3-ref-useref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-ref-useref"}},[t._v("#")]),t._v(" 3.ref（useRef）")]),t._v(" "),a("p",[t._v("用react方法来获取dom对象")]),t._v(" "),a("p",[t._v("从react中获取dom对象步骤：")]),t._v(" "),a("p",[t._v("1.创建一个存储dom对象的容器")]),t._v(" "),a("p",[t._v("使用useRef钩子函数")]),t._v(" "),a("p",[t._v("钩子函数注意事项：")]),t._v(" "),a("p",[t._v("1.钩子函数必须在函数组件的最外层")]),t._v(" "),a("p",[t._v("2.钩子函数不能出现在条件语句中")]),t._v(" "),a("p",[t._v("3.钩子函数不能出现在循环语句中")]),t._v(" "),a("p",[t._v("4.钩子函数不能出现在嵌套函数中")]),t._v(" "),a("p",[t._v("2.将容器设置为想要获取的dom元素的ref属性")]),t._v(" "),a("p",[t._v("3.通过创建容器对象的current属性拿到对应的dom对象")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  //1.创建容器  \n  const h1Ref = useRef();\n\n  const clickHandler = () => {\n    console.log(h1Ref.current);\n  }\n\n  return (\n    <div className='App'>\n      {/* 2.设置容器 */}\n      <h1 ref={h1Ref}>标题</h1>\n      <button onClick={clickHandler}>1</button>\n    </div>\n  );\n")])])]),a("p",[a("code",[t._v("useRef()")]),t._v("所返回的对象就是一个普通的JS对象，所以上例中即使我们不使用钩子函数，仅仅创建一个形如"),a("code",[t._v("{current:null}")]),t._v("的对象也是可以的。只是我们自己创建的对象组件每次渲染时都会重新创建一个新的对象，而通过"),a("code",[t._v("useRef()")]),t._v("创建的对象可以确保组件每次的重渲染获取到的都是相同的对象。")])])}),[],!1,null,null,null);a.default=e.exports}}]);